plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.1'
}

group = 'cc.azuramc'
version = '0.0.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url = "https://repo.maven.apache.org/maven2"
    }
    maven {
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        url = "https://raw.githubusercontent.com/eurotech/kura_addons/mvn-repo/"
    }
}

dependencies {
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly "org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT"
    compileOnly 'org.projectlombok:lombok:1.18.34'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation 'com.zaxxer:HikariCP:6.2.1'
    // https://mvnrepository.com/artifact/org.apache/org.apache.commons.lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'com.github.Revxrsal.Lamp:common:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.2.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
}
